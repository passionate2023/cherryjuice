name: tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install server dependencies
        run: cd cs_server && sudo yarn install

      - name: link dependencies
        run: cd cs_server && sudo yarn link:ahtml-to-html

      - name: install client dependencies
        run: cd cs_client && yarn install

      - name: run jest tests
        run: cd cs_client && sudo yarn run test

      - name: Notify slack success
        if: success()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: SUCCESS
          color: good

      - name: trigger workflow
        if: success()
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          workflow: build_${{ steps.extract_branch.outputs.branch }}

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED
          color: danger
