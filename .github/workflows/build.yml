name: build

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true

      - name: remove optional dependencies
        run: pnpm strip:deps -- --opt --include-client

      - name: set env variables
        run: |
          echo "BUILD_DATE=$(date)" >> $GITHUB_ENV
          echo "COMMIT_SHA=`echo ${GITHUB_SHA}`" >> $GITHUB_ENV

      - name: build app
        run: pnpm build:app

      - name: package binaries
        run: pnpm build:bin

      - name: upload linux binary
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: cherryjuice-linux
          path: /home/runner/work/cherryjuice/cherryjuice/bin/cherryjuice-linux.tar.gz
          retention-days: 1

      - name: upload windows binary
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: cherryjuice-win
          path: /home/runner/work/cherryjuice/cherryjuice/bin/cherryjuice-win.tar.gz
          retention-days: 1

      - name: remove dev dependencies
        run: pnpm strip:deps -- --dev --include-client --include-server

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner  }}
          password: ${{ secrets.GDCR_TOKEN }}

      - name: Build and push to docker.github
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/ycnmhd/cherryjuice/app-${{ steps.extract_branch.outputs.branch }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: trigger deploy workflow
        if: success()
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          workflow: deploy

      - name: Notify slack fail
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: ${{ secrets.SLACK_CHANNEL }}
          status: FAILED
          color: danger
