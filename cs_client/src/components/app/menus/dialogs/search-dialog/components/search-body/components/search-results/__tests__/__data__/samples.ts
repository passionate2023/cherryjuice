const searchResultsData = {
  sample1: {
    search: {
      node: {
        meta: { elapsedTimeMs: 13, __typename: 'SearchResultMeta' },
        results: [
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd72ead0a-682a-4a82-8d77-b920436e1584',
            node_id: 4,
            nodeName: 'node 1.2',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n',
            createdAt: 1568911874063,
            updatedAt: 1569059344245,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '5453f835-a1ec-414d-ba54-5944494c18f7',
            node_id: 5,
            nodeName: 'node 2.1',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n\n',
            createdAt: 1568911888007,
            updatedAt: 1569059360868,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '9cb06591-06df-4753-9787-5bf93fcd0d15',
            node_id: 3,
            nodeName: 'node 1.1',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n',
            createdAt: 1568911867218,
            updatedAt: 1569059366567,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '9daed680-193b-489a-b897-724bb8151ceb',
            node_id: 12,
            nodeName: 'code-lite',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "example: logging into the console console.log('hello');\n",
            createdAt: 1578008223968,
            updatedAt: 1578436533072,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '787ab39f-d60f-4d3a-9bd5-f377a878323d',
            node_id: 14,
            nodeName: 'sole code',
            documentName: 'file',
            headline: null,
            ahtml_txt: "alert('hellloooooo');\nalert('helllooooooX');\nhaha\n",
            createdAt: 1578440634696,
            updatedAt: 1578442245053,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'c0d0bec6-1317-47ed-8738-d68cf1c6def5',
            node_id: 16,
            nodeName: 'newline-edgecase',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'a\nb\n',
            createdAt: 1578525249718,
            updatedAt: 1578604263300,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ec3f2f1d-e3de-41f0-a2ee-d3b0bc219fa0',
            node_id: 24,
            nodeName: 'fixed',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1578872318194,
            updatedAt: 1578872318194,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '4320eaf0-06f4-4445-acde-74674550a121',
            node_id: 20,
            nodeName: 'bug2_empty_newline_ignred',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'the instructor suggests\n\ngenerators will solve\n\n\nif a yield\n\ninstead \n\n\n\nyield > pause > then > it.next\n',
            createdAt: 1578695437406,
            updatedAt: 1578954241606,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '49a995b9-0d66-4985-8484-86090cae356c',
            node_id: 22,
            nodeName: 'issue3_monospace_not_fully_applied',
            documentName: 'file',
            headline: null,
            ahtml_txt: "i  a  f  '' ;\nimport *  f  '' ;\n",
            createdAt: 1578954421522,
            updatedAt: 1578957219763,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '79a60c82-84a6-491f-ab40-bec1d099f1b5',
            node_id: 26,
            nodeName: 'full',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '\n\n- whenever we do a  return  from a generator, we immediately complete it, and we get the returned value alongside  done:true\n\n- when we call the next method, we can pass messages to the generator\nfunction *  gen () {\n   let  x  =  0  +  ( yield ) ;\n   console . log ( x ) ;  // 5\n   let  y  =  0  +  ( yield ) ;\n   console . log ( y ) ;  // 2\n   yield  x  +  y ;\n}\nlet  it  =  gen () ;\nconsole . log ( it . next ()) ;\nconsole . log ( it . next (5)) ;\nconsole . log ( it . next (2)) ;\n\n\n\n\nexample2\n\n(run is equivalent to it.next)\n',
            createdAt: 1578960525767,
            updatedAt: 1579039219201,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd3652c3b-2140-4edf-9184-142d8a54ac64',
            node_id: 30,
            nodeName: 'full',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "- we can define a regex using either\n\t/le_pattern/le_flags\n\tnew RegExp(le_pattern, le_flags)\n\t\n\t\n- from mdn:  Regular expressions are used with the  RegExp  methods  test  and  exec , and with the  String methods  match ,  replace ,  search , and  split .\n\n\n\n>regex functions\na) regex.test returns a boolean if the pattern matches\nlet  str  =  `Is this This?` ;\n\nconsole . log ( /isd/g . test ( str )) ;  // false\nconsole . log ( /is/g . test ( str )) ;  // true\n\nb) regex.exec returns a regexArray\nlet  str  =  `Is this This?` ;\n\nlet  regex  =  /is/g ;\nconsole . log ( regex . exec ( str )) ;\n// [ 'is', index: 5, input: 'Is this This?', groups: undefined ]\n\nunlike  test , the  exec  method is stateful: \n\n\n>string functions\na)  str.match\nlet  str  =  `Is this This?` ;\n\nlet  regex  =  /is/gi ;\nconsole . log ( str . match ( regex )) ;  // [ 'Is', 'is', 'is' ]\n\nb)  str.matchAll\nlet  str  =  `Is this This?` ;\n\nlet  regex  =  /is/gi ;\nconsole . log ( ...str . matchAll ( regex )) ;  // [ 'Is', index: 0, input: 'Is this This?', groups: undefined ] [ 'is', index: 5, input: 'Is this This?', groups: undefined ] [ 'is', index: 10, input: 'Is this This?', groups: undefined ]\n\nc)  str.replace\nlet  str  =  `Is this This?` ;\n\nlet  regex  =  /is/gi ;\nconsole . log ( str . replace ( regex ,  \"**\" )) ;  // ** th** Th**?\n\nd)  str.search : returns the index of the first match\nlet  str  =  `Is this This?` ;\n\nlet  regex  =  /is/g ;\nconsole . log ( str . search ( regex )) ;  // 5\n\n\n>basic regex playground using  str.replace\n// app.js\n'use strict';\n\nconst output = (str, regex, target) => {\n  target.innerHTML =\n    str.replace(regex, str => `<span>${str}</span>`);\n}\n\nvar str = `Is this This?`;\n\n//var regex = new RegExp(\"is\", \"g\");\nvar regex = /is/gi;\n\noutput(str, regex, document.querySelector('pre'))\n// index.html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Javascript Regular Expressions: Introduction</title>\n  <style>\n    pre {\n      line-height: 2;\n    }\n\n    span {\n      background-color: #eee;\n      padding: 1px;\n      outline: 1px solid #999;\n    }\n\n  </style>\n</head>\n<body>\n  <pre></pre>\n  <script src=\"app.js\"></script>\n</body>\n</html>\n\n\n*\n>my react alternative\n\n- full code\nimport  {  useState  }  from  'react' ;\nimport *  as  React  from  'react' ;\n\nfunction  createMarkup (str ,  { regex ,  flag }) {\n   let  regexExpression ;\n   try  {\n     regexExpression  =  new  RegExp (regex ,  flag) ;\n   }  catch  (e) {\n     console . log (e) ;\n     return  {  __html :  ' < h1 style=\"background: red\" >  wrong regex  </ h1 > '  } ;\n   }\n\n   return  {\n     __html :  str . replace (\n       regexExpression ,\n       str  =>\n         ` < span style=\"background-color: #e44234; padding: 1px; outline: 1px solid #0b1621;\" > $ {str}</ span > ` ,\n     ) ,\n   } ;\n}\n\nfunction  Regex () {\n   const  [ str ,  setStr ]  =  useState ( 'Is this This?' ) ;\n   const  [ regex ,  setRegex ]  =  useState ( 'is' ) ;\n   const  [ flag ,  setFlag ]  =  useState ( 'gi' ) ;\n\n   return  (\n    < div\n       style = {{\n         display :  'flex' ,\n         flexDirection :  'column' ,\n         width :  200 ,\n         margin :  'auto' ,\n       }}\n    >\n      < label > text </ label >\n      < textarea\n         onChange = {e  =>  setStr (e . target . value )}\n         placeholder = { 'string' }\n         value = { str }\n      />\n      < label > regex </ label >\n      < input\n         type =\"text\"\n         onChange = {e  =>  setRegex (e . target . value )}\n         placeholder = { 'regex' }\n         value = { regex }\n      />\n      < label > flags </ label >\n\n      < input\n         type =\"text\"\n         onChange = {e  =>  setFlag (e . target . value )}\n         placeholder = { 'flag' }\n         value = { flag }\n      />\n      < div  style = {{  background :  '#f6d4d9' ,  marginTop :  '10px'  }}>\n        < div  style = {{  margin :  '10px'  }}>\n          { ' ' }\n          < h3 >{ `/ $ { regex } / $ { flag } ` }</ h3 >\n          < pre\n             style = {{  lineHeight :  2 }}\n             dangerouslySetInnerHTML = { createMarkup ( str ,  {  regex ,  flag  })}\n          />\n        </ div >\n      </ div >\n    </ div >\n  ) ;\n}\n\nexport  {  Regex  } ;\n\n*\n",
            createdAt: 1579042482131,
            updatedAt: 1579042608798,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '12650206-b2f7-4335-8080-a41f9f6032f5',
            node_id: 29,
            nodeName: 'issue5_offset_images_and_tables_and_code_box',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '- fr  and  split .\n\n\n\n>regex functions\na) regex.test returns a boolean if the pattern matches\nlet  str  =  `Is this This?` ;\n\nconsole . log ( /isd/g . test ( str )) ;  // false\nconsole . log ( /is/g . test ( str )) ;  // true\n\nb) regex.exec returns a regexArray\nlet  str  =  `Is this This?` ;\n\nlet  regex  =  /is/g ;\nconsole . log ( regex . exec ( str )) ;\n// [ \'is\', index: 5, input: \'Is this This?\', groups: undefined ]\n\nunlike  test , the  exec  method is stateful: \n\n\n>string functions\na)  str.match\nlet  str  =  `Is this This?` ;\n\n\n>basic regex playground using  str.replace\n// app.js\n\'use strict\';\n\nconst output = (str, regex, target) => {\n  target.innerHTML =\n    str.replace(regex, str => `<span>${str}</span>`);\n}\n\nvar str = `Is this This?`;\n\n//var regex = new RegExp("is", "g");\nvar regex = /is/gi;\n\noutput(str, regex, document.querySelector(\'pre\'))\n// index.html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <title>Javascript Regular Expressions: Introduction</title>\n  <style>\n    pre {\n      line-height: 2;\n    }\n\n    span {\n      background-color: #eee;\n      padding: 1px;\n      outline: 1px solid #999;\n    }\n\n  </style>\n</head>\n<body>\n  <pre></pre>\n  <script src="app.js"></script>\n</body>\n</html>\n\n\n*\n>my react alternative\n\n- full code\ni\n',
            createdAt: 1579042468223,
            updatedAt: 1579124312068,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd6526885-3a58-410b-af80-5e0f4b12d561',
            node_id: 15,
            nodeName: 'table',
            documentName: 'file',
            headline: null,
            ahtml_txt: ' dzadza\n   \n',
            createdAt: 1578442245054,
            updatedAt: 1579216036221,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '797b2514-faf0-403b-8b82-09ccfeb4dc8d',
            node_id: 36,
            nodeName: 'mini',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'there is a difference between async and parallism. js\'s async is not parallalism\n\n" non-parallelism would be like you waiting in line at amusement park for a roller coaster. Lots of people in line, the roller coaster has 30 seats on it but  only one person \n',
            createdAt: 1580076064537,
            updatedAt: 1580076871949,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '3d56fae0-df05-4a16-a941-9c09cbca95cf',
            node_id: 35,
            nodeName: 'new-line from thinair',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "there is a difference between async and parallism. js's async is not parallalism\n\n\" non-parallelism would be like you waiting in line at amusement park for a roller coaster. Lots of people in line, the roller coaster has 30 seats on it but  only one person can ride at any given  moment\non the other hand, if  30 people are experiencing the roller coaster at exactly the same instant. That's more parallelism \"\n\n-  in a computing sense, parallelism is expressed through threads\nin asynchronicity, our js program runs only on a single thread even though the browser may have access to multiple threads and even the JavaScript engine node for example could use hundreds of threads in the background.\nat any given instant there is only one line of JavaScript running in the JavaScript engine\n\n- we  could in theory spend multiple instances of the JavaScript engine on entirely separate threads, but they couldn't communicate in any useful way\n\nw eb workers are an example of trying to bridge that gap, but that's not a JavaScript thing, that's a browser thing\nas far as js is concerned,  those two things don't know about each other they don't have any overlap, they're not sharing variables , however  web workers do give us a communication path through asynchronous events , which themselves rely  on the single threaded notion through the event loop\n",
            createdAt: 1580075744535,
            updatedAt: 1580083674205,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '072acaba-32b7-4681-a0a9-2826f0e4fce0',
            node_id: 19,
            nodeName: 'text link image table code',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "simlple text\nbold red  green-insider-sub  text\nconst  RichText :  React . FC < Props > \nnode url:  node2\nhttp url:  wikipedia  \nfolder url:  temp folder\nfile url:  txt file\n\n\nconsole.log('hello');\n",
            createdAt: 1578619489036,
            updatedAt: 1580864785228,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'f0894a4e-0f2f-4a25-aefa-e29d1fa2ef42',
            node_id: 41,
            nodeName: 'text',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'simlple text\nbold red  green-insider-sub  text\nconst  RichText :  React . FC < Props > \n',
            createdAt: 1580864794188,
            updatedAt: 1580951040435,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd1362acd-75e7-4cd3-9f34-008ebd97fbba',
            node_id: 40,
            nodeName: 'reverse-rendering',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1580864765269,
            updatedAt: 1580951648292,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '7fb8dd91-5bb9-4de7-9459-aaa3caa04ad4',
            node_id: 11,
            nodeName: 'code',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "\nexample: logging into the console\n\nexample: alerting the user\n\n alert('hello');\n\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\nconsole.log('hello');\nArray.from(3)\n\nconsole.log('hello');\nArray.from(3)\nconclusion: foo bar!\n\n    \n\n",
            createdAt: 1578005111885,
            updatedAt: 1581383960568,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'e15bb884-0b75-460b-b170-5e73440d6228',
            node_id: 27,
            nodeName: 'issue6',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '- we can think of callbacks as a continuation, a secondary half that runs after a time-gap that separates it from the first half\n"w hen we refer to functions as continuations, what we mean is, we did the first half of our program  now, and we wrap the seco nd half of our program up in a callback "\n\n- [ ! ] the instructor suggests that callback hell doesnt actually have to do with indentation, as we could rewrite a "callback hell" without nesting\n \nthe instructor suggests that t here are two conceptually deficient  problems with callbacks\n',
            createdAt: 1579124827588,
            updatedAt: 1581384083124,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'a807f1f6-8dc0-4118-b3a0-5b95b69ab4ed',
            node_id: 31,
            nodeName: 'issue7',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'promises can be chained together\n>example\n\nthe  .then  on line 5 will "magically" wait for the promise from line 3\n\n>example2\n\n',
            createdAt: 1579125541946,
            updatedAt: 1581384124535,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '03529abf-1d35-4359-aa90-7efd662a5fc7',
            node_id: 53,
            nodeName: 'link style overriden',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'bold  red  text  with blue  bg\n',
            createdAt: 1582130984349,
            updatedAt: 1582130984724,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'b3bec32f-80cf-49fd-b9d3-77cd9c198244',
            node_id: 63,
            nodeName: 'description',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'style is not applyed on the standalone space\n\n',
            createdAt: 1582475200482,
            updatedAt: 1582475208964,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'bbb3c38d-bd73-4bd2-b363-a2940f49f501',
            node_id: 60,
            nodeName: 'closed',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1582454896022,
            updatedAt: 1582551182945,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ba99073f-e27f-49b7-838f-7a054ba09bc7',
            node_id: 64,
            nodeName: 'white spaces',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '• trimmed\nric h\n\ntext\n\n• space at end-1\nric h \n\ntext\n\n• space at mid\nric h\n \ntext\n\n• space at end-2\nric h\n\ntext  \n\n• space at end-1 and mid\nric h  \n \ntext\n\n• space at end-1 and mid and end-2\nric h  \n \ntext  \n\n• 2 spaces at end-1\nric h   \n\ntext\n',
            createdAt: 1582485079705,
            updatedAt: 1582555792623,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'f48f9638-7394-4ce0-96b5-f98c97f46cfd',
            node_id: 51,
            nodeName: 'code',
            documentName: 'file',
            headline: null,
            ahtml_txt: "some\n  console.log('hello');  \ntext\n\n",
            createdAt: 1582125432580,
            updatedAt: 1582556931198,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ef07f5b6-5408-41f2-aa01-2ca1532656c2',
            node_id: 68,
            nodeName: 'standalone tag',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "so me\nsome\n \ntext\nte xt\n\nsome\nso me\n  console.log('hello');  \nte xt\ntext\n\n\n\n\n",
            createdAt: 1582556890282,
            updatedAt: 1582562347386,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '4ab17e66-a7a6-40da-a409-156bc2e2c03e',
            node_id: 71,
            nodeName: 'deleted start root',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'text   bold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\n\nhalo   bold  red text with blue  bg\n',
            createdAt: 1582565231063,
            updatedAt: 1582565632333,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '57d62df4-29d6-433c-a964-d41505adedad',
            node_id: 72,
            nodeName: 'apply-to-dom',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1582565294295,
            updatedAt: 1582635341575,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '0774969b-5dbb-4d93-8b16-c3f302e3745b',
            node_id: 70,
            nodeName: 'offset',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'bold  red text with blue  bg\n \ntext   bold  red text with blue  bg\nbold  red text with blue  bg\n\n',
            createdAt: 1582557295266,
            updatedAt: 1582635351497,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '7a4debbd-0f91-4bd5-9b38-c7c97104ce69',
            node_id: 74,
            nodeName: 'general',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'bold  red text with blue  bg\nbold  red text with blue  bg\n\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\n \ntext   bold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\n\n\n\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\n  .bold red text with blue bg\nbold red text with blue bg\nbold red text with blue bg\nbold red text with blue bg\nbold red text with blue bg\nbold red text with blue bg\nbold red text with blue bg simple text  \ntext   bold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\n',
            createdAt: 1582567972680,
            updatedAt: 1582635354314,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '4419ffd2-4526-47af-970f-6c19ba7ef9c3',
            node_id: 73,
            nodeName: 'undefined startElement',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'bold  red text with blue  bg\n \ntext   bold  red text with blue  bg\n',
            createdAt: 1582567878411,
            updatedAt: 1582635356817,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'e6aa2ada-ed56-4046-bc5e-4eca33186d27',
            node_id: 75,
            nodeName: 'justification',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'bold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg  simple text\n\nbold  red  _link_  with blue  bg\n\nsimple text  bold  red text with blue  bg\n\n',
            createdAt: 1583070079328,
            updatedAt: 1583070254301,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'c830a1de-75d9-437c-8951-673a784febee',
            node_id: 54,
            nodeName: 'code tags',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'sam ple  tex t\n',
            createdAt: 1582833307865,
            updatedAt: 1583152704392,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '564d6428-7b2c-48dd-9b17-1d0d4983983d',
            node_id: 79,
            nodeName: 'selection starts with space',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "first second\n$mdc-theme-background :  floralwhite ;\n@import  '~@material/linear-progress/mdc-linear-progress' ;\nport  '~@mate\n\thello\n",
            createdAt: 1583301795608,
            updatedAt: 1583301982792,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '8287d258-2e94-455c-8c96-7bc80cb2387c',
            node_id: 81,
            nodeName: 'wikipedia',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              ' \nPublic support [ edit ]\n Acceptance of human evolution in various countries. [111] [112] There does not appear to be significant correlation between believing in evolution and understanding evolutionary science. [113] [114]  In some countries, creationist beliefs (or a lack of support for evolutionary theory) are relatively widespread, even garnering a majority of public opinion. A study published in  Science  compared attitudes about evolution in the United States, 32 European countries (including Turkey) and  Japan . The only country where acceptance of evolution was lower than in the United States was  Turkey  (25%). Public acceptance of evolution was most widespread (at over 80% of the population) in  Iceland ,  Denmark  and  Sweden . [115]\n\nAfghanistan [ edit ]\nAccording to the Pew Research Center, Afghanistan has the lowest acceptance of evolution in the Muslim countries. Only 26% of people in  Afghanistan  accept evolution. 62% deny human evolution and believe that humans have always existed in their present form. [116]\n\n',
            createdAt: 1583386927630,
            updatedAt: 1583386940198,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd3527ed8-54b4-42cc-afdc-39af5e0d28c8',
            node_id: 82,
            nodeName: 'mdn',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'The  Node.cloneNode()  method returns a duplicate of the node on which this method was called.\nSyntax\nlet newClone = node.cloneNode([deep]) node     The node to be cloned. newClone    The new node, cloned from node.\n\n',
            createdAt: 1583386940201,
            updatedAt: 1583417366816,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'fca982bf-443a-4315-89fb-4ee211f1a26a',
            node_id: 83,
            nodeName: 'mdn2',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\nnode\n\tThe node to be cloned.\n',
            createdAt: 1583390349730,
            updatedAt: 1583749570534,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'e3b93ba1-0ef1-4dbf-b9d3-63f8c05896e2',
            node_id: 84,
            nodeName: 'webstorm',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "import  {  escapeHtml  }  from  '::helpers/escape-html' ;\nimport  {  flattenAHtml  }  from  '::helpers/execK/helpers/html-to-ahtml/steps/flatten-ahtml' ;\nimport  {\n   flattenLines ,\n   isBlock\n}  from  '::helpers/execK/helpers/html-to-ahtml/steps/flatten-lines' ;\n\nconst  getStyles  =  el  =>\n   (el . style . cssText . match ( / ([ \\w\\- ] + )(?= : ) /g )  ||  []) . reduce (\n    (acc ,  key)  =>  ({  ... acc ,  [key] :  el . style [key] }) ,\n     {}\n  ) ;\n\ntype  TProps  =  {\n   DDOEs :  Node [] ;\n   // startElement;\n  // endElement;\n  // coordinates: {\n  //   indexOfEndLine;\n  //   indexOfEndElement;\n  //   indexOfStartLine;\n  //   indexOfStartElement;\n  // };\n   options ?:  {\n     useObjForTextNodes ?:  boolean ;\n     serializeNonTextElements ?:  boolean ;\n     // includeDatasetInTextElements?: boolean;\n    // includeRefToEl?: boolean;\n   } ;\n} ;\n\nconst  getAttributes  =  (ignoredAttributes :  string [])  =>  el  =>\n   // @ts-ignore\n   Object . fromEntries (\n     Array .from (el . attributes )\n       . filter (({ name })  => ! ignoredAttributes . includes (name))\n       . map (({ name ,  value })  =>  [\n        name ,\n         name  ===  'style'  ?  getStyles (el)  :  value\n      ])\n  ) ;\n\nconst  getTags  =  (list  =  [])  =>  el  =>  [\n   ... list ,\n   [el . localName ,  getAttributes ([])(el)] ,\n   ... (el . localName  ===  'table'\n     ?  []\n     :  Array .from (el . children ) . flatMap ( getTags (list)))\n] ;\n\nconst  flattenDDOEs  =  ({ DDOEs })  =>  {\n   const  flat  =  [] ;\n   DDOEs . forEach (DDOE  =>  {\n     Array .from (DDOE . childNodes ) . forEach (child  =>  {\n       const  DDOEClone  =  DDOE . cloneNode () ;\n       DDOEClone . innerHTML  =\n         child . nodeType  ===  Node . TEXT_NODE  ?  child . wholeText  :  child . outerHTML ;\n       flat . push ( DDOEClone ) ;\n     }) ;\n     // if (isBlock(DDOE)) flat.push(document.createElement('br'));\n   }) ;\n   return  flat ;\n} ;\n\nconst  getAHtml  =  ({\n  DDOEs ,\n   // coordinates,\n  // startElement,\n  // endElement,\n   options  =  {}\n} :  TProps )  =>  {\n   // const flatList = flattenLines({lines});\n   const  flatList  =  flattenDDOEs ({ DDOEs }) ;  //DDOEs.flatMap(DDOE => Array.from(DDOE.childNodes));\n   const  state  =  {  offset :  0 } ;\n   const  abstractHtml  =  ( flatList  as any []) . reduce ((\n    acc ,\n     el  //: HTMLElement | HTMLTableElement | HTMLImageElement | HTMLAnchorElement\n   )  =>  {\n     if  (el . nodeType  ===  Node . ELEMENT_NODE  ||  el . nodeType  ===  Node . TEXT_NODE ) {\n       if  (el . localName  ===  'br' ) {\n        acc . push ( ' \\n ' ) ;\n         state . offset  +=  1 ;\n       }  else  {\n         let  commonAttributes  =  {\n           tags :\n             el . nodeType  ===  Node . ELEMENT_NODE\n               ?  getTags ([])(el)  //.filter(([tagName]) => tagName !== 'br')\n               :  []\n        } ;\n         if  (el . localName  ===  'code'  &&  el . classList . contains ( 'rich-text__code' ))\n          acc . push (\n            options . serializeNonTextElements\n               ?  {\n                   ... commonAttributes ,\n                   type :  'code' ,\n                   outerHTML :  el . outerHTML\n                 }\n               :  {\n                   ... commonAttributes ,\n                   type :  'code' ,\n                   _ :  el . innerText ,\n                   other_attributes :  {\n                     offset :  state . offset ++,\n                     do_highl_bra : + el . dataset . do_highl_bra ,\n                     is_width_pix : + el . dataset . is_width_pix ,\n                     width_raw : + el . dataset . width_raw ,\n                     syntax :  el . dataset . syntax\n                   }\n                }\n          ) ;\n         else if  (el . localName  ===  'img' )\n           if  (el . dataset )\n             // existing image\n             acc . push (\n              options . serializeNonTextElements\n                 ?  {\n                     ... commonAttributes ,\n                     type :  'png' ,\n                     outerHTML :  el . outerHTML\n                   }\n                 :  {\n                     ... commonAttributes ,\n                     type :  'png' ,\n                     other_attributes :  {\n                       offset :  state . offset ++\n                     }\n                  }\n            ) ;\n           // new image\n           else\n             acc . push (\n              options . serializeNonTextElements\n                 ?  {\n                     ... commonAttributes ,\n                     type :  'png' ,\n                     outerHTML :  el . outerHTML\n                   }\n                 :  {\n                     ... commonAttributes ,\n                     type :  'png' ,\n                     src :  el . src ,\n                     other_attributes :  {\n                       offset :  state . offset ++\n                     }\n                  }\n            ) ;\n         else if  (el . localName  ===  'table' )\n          acc . push (\n            options . serializeNonTextElements\n               ?  {\n                   ... commonAttributes ,\n                   type :  'table' ,\n                   outerHTML :  el . outerHTML\n                 }\n               :  {\n                   ... commonAttributes ,\n                   type :  'table' ,\n                   thead :  el . tHead . innerText ,\n                   tbody :  el . tBodies [0] . innerText ,\n                   other_attributes :  {\n                     offset :  state . offset ++,\n                     col_min_width : + el . dataset . col_min_width ,\n                     col_max_width : + el . dataset . col_max_width\n                   }\n                }\n          ) ;\n         else if  (el . localName  ===  'a' ) {\n           state . offset  +=  el . innerText . length ;\n           acc . push ({\n             ... commonAttributes ,\n             _ :  el . innerText ,\n             other_attributes :  {\n               type :  el . dataset . type ,\n               href :  el . href\n             }\n          }) ;\n         }  else if  (el . nodeType  ===  Node . TEXT_NODE ) {\n           state . offset  +=  el . wholeText . length ;\n           console . log ( 'pushing the element' ,  el) ;\n           if  (options . useObjForTextNodes ) {\n            acc . push ({\n               ... commonAttributes ,\n               _ :  escapeHtml (el . wholeText )\n            }) ;\n           }  else  {\n            acc . push ( escapeHtml (el . wholeText )) ;\n           }\n        }  else  {\n           const  {  numberOfNewLines ,  newAcc  }  =  flattenAHtml ({\n            acc ,\n             aHtml :  {\n               _ :  escapeHtml (el . textContent ) ,\n               ... commonAttributes\n             }\n          }) ;\n           acc  =  newAcc ;\n           state . offset  +=  el . textContent . length  +  numberOfNewLines ;\n           // acc.push({\n          //   _: el.textContent,\n          //   ...commonAttributes\n          // });\n         }\n      }\n       // const insertedAHtml = acc[acc.length - 1];\n      // if (insertedAHtml._)\n      //   acc = replaceNewLineCharacterWithBreakLine(insertedAHtml, acc);\n     }\n     return  acc ;\n   } ,  []) ;\n   return  {  abstractHtml  } ;\n} ;\n\nexport  {  getAHtml  } ;\n\n",
            createdAt: 1583749570548,
            updatedAt: 1583749572246,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'f1e7dae9-4dc3-4870-be05-cebee77ebee7',
            node_id: 86,
            nodeName: 'richtext multiline',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'red text\ngreen text\nblue text\n',
            createdAt: 1583917337525,
            updatedAt: 1583917338245,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '0bb07f46-01f2-495e-805c-522c651cebe8',
            node_id: 8,
            nodeName: 'node y',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '\n1. hello\n2. world!\n3. :D\n• hello\n• world\n• :D\n☐ hello\n☐ world\n☐ :D\n',
            createdAt: 1576532756399,
            updatedAt: 1583926059156,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '49ef3c75-eb18-413f-89df-c0684be7a08f',
            node_id: 49,
            nodeName: 'link',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'simple text  http://google.com   rich text\nsim ple\n\n text  http://google. co m   rich  text\nhttp://google.com  dz\n',
            createdAt: 1582124983137,
            updatedAt: 1584007852759,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '2949d163-c4ff-4dea-85a5-8519e544efb7',
            node_id: 43,
            nodeName: '?',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'bold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg  simple text\n\nbold  red  _link_  with blue  bg\n\nsimple text  bold  red text with blue  bg\n\n',
            createdAt: 1581553669558,
            updatedAt: 1584010412568,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '45ea0746-edc8-49f7-a647-8ba8c8b3538e',
            node_id: 88,
            nodeName: 'text',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n',
            createdAt: 1584010412596,
            updatedAt: 1584010413569,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ac9f633b-a5c3-4a0c-b249-56bf3047eef1',
            node_id: 89,
            nodeName: 'wb 3',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'fst\nscd  thr   for\nfiv\n',
            createdAt: 1584338137307,
            updatedAt: 1584338137835,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'a5c5e689-b45b-4e9a-85af-133e5cbee3a7',
            node_id: 91,
            nodeName: 'text and image',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n\n\n',
            createdAt: 1584366971578,
            updatedAt: 1584367369935,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '28097680-ff8c-42a1-85e0-0acf6d11a05e',
            node_id: 90,
            nodeName: 'wb 5',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n\n',
            createdAt: 1584354142842,
            updatedAt: 1584432811823,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '7c42b6ed-49c2-466c-a7ce-3b1f2fe3d709',
            node_id: 77,
            nodeName: 'pasting',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "first second\n$mdc-theme-background :  floralwhite ;\n@import  '~@material/linear-progress/mdc-linear-progress' ;\nport  '~@mate  \n",
            createdAt: 1583154184916,
            updatedAt: 1584527166844,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'cf8ad5f0-07ff-4d51-b514-9457e528f084',
            node_id: 94,
            nodeName: '1',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\t\tyacine mohamdi\n\tkamel  3azira\n',
            createdAt: 1584527161864,
            updatedAt: 1584527974486,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '1aafa5d0-0ad5-44d9-9091-55ceeec35a8b',
            node_id: 93,
            nodeName: 'structure',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'multiline text is selected\n\tpress tab\n\t\tinsert a tab at the start of each line\n\tpress shift+tab\n\t\tremove a tab from the start of each line\n',
            createdAt: 1584454382698,
            updatedAt: 1584527979001,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'de9835bc-bf52-43ad-8f75-0b12882f065a',
            node_id: 78,
            nodeName: 'wb 4',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'one two   three four\nfive six\n\n  three four\nfive six\n\none two hello world  three four\nfive six\n\nhello insideworld  three four\nfive six\n\none two    three four\nfive six\n\n    three four\nfive six\n',
            createdAt: 1583154193013,
            updatedAt: 1584528985024,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd5065c16-3039-415e-a8af-2abfffdc1cd5',
            node_id: 96,
            nodeName: 'rich text',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'multiline text is selected\n\tpress tab\n\t\tinsert a tab at the start of each line\n\tpress shift+tab\n\t\tremove a tab from the start of each line\n',
            createdAt: 1584527979018,
            updatedAt: 1584533254343,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'f26bd54f-4cf3-442e-a6d3-f4bc207573c2',
            node_id: 98,
            nodeName: 'empty lines',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'multiline text is selected\n\tpress tab\n\t\tinsert a tab at the start of each line\n\n\n\tpress shift+tab\n\t\tremove a tab from the start of each line\n',
            createdAt: 1584533247465,
            updatedAt: 1584533274389,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '24b72004-0638-475e-87ad-4b611ad4f094',
            node_id: 97,
            nodeName: 'images',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'one two   three four\nfive six\n\n\n  three four\nfive six\n\none two hello world  three four\nfive six\n\nhello insideworld  three four\nfive six\n\none two    three four\nfive six\n\n    three four\nfive six\n',
            createdAt: 1584528985042,
            updatedAt: 1584533978357,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '20bfc626-c0d4-4942-82fd-bd0e7045b381',
            node_id: 92,
            nodeName: 'simple text',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'yacine mohamdi\nkamel 3azira\n',
            createdAt: 1584432815382,
            updatedAt: 1584599003832,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '4f13705d-8f8a-47a9-ab2e-15821a7d394f',
            node_id: 99,
            nodeName: 'wb',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "// childrenElementsOfStartDDOE = [left, ...pastedData].map(node =>\n// toNodes(node === '\\n' ? `<br>` : aHtmlToElement({ node })),\n// );\n// const childrenElementsOfEndDDOE = [right].map(node =>\n//   toNodes(aHtmlToElement({ node })),\n// );\n",
            createdAt: 1584598995374,
            updatedAt: 1584624108407,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '012e2b15-e49a-4923-b169-f29d142de6d4',
            node_id: 76,
            nodeName: 'justification',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'left\nmiddle\nright\nhello\n',
            createdAt: 1583070672572,
            updatedAt: 1584874238141,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd111219c-4d89-4047-8a42-3dec9b053f8a',
            node_id: 1,
            nodeName: 'node 1',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1568911850917,
            updatedAt: 1585660590532,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '10c24e5d-06cb-451f-8983-9a8d186e8370',
            node_id: 42,
            nodeName: 'test',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'haha     o \nnormal text  bold red text with blue bg  italic :o t/// ext  \n---\nred text   bold italic blue text with pink bg   sourlign2  mono pink text\nthis is h1 green stroke through text\nthis is the second line, size h2, in pink\nthis is h3\nthis is sup   this is sub   this is zero\n\n\nthis is the 8th line. the previous two lines was empty\nthis  is  the 9th  line. the previous line was empty\n\ncode normal  bold   small\ncode normal  bold   small\ndza dz\n',
            createdAt: 1580951040447,
            updatedAt: 1585661131530,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '267df441-4685-41f8-a931-7648fa6cca99',
            node_id: 104,
            nodeName: 'new node',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1585661131564,
            updatedAt: 1585661131564,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'f8c469da-9f91-4505-a3cd-e02494352561',
            node_id: 105,
            nodeName: 'new node 2',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1585666624153,
            updatedAt: 1585666624153,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '2c69fa57-c194-481a-95e4-56f813e8e841',
            node_id: 110,
            nodeName: 'closed',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1585748348847,
            updatedAt: 1585748348847,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ea955cd2-004a-42fa-b9c3-774cb6b20d4a',
            node_id: 111,
            nodeName: 'rendering',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1585748652992,
            updatedAt: 1585748658159,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'c30df8d4-b967-48de-8ac0-08cd7818f560',
            node_id: 109,
            nodeName: 'code box has invisible offset',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'some  hello world text\n',
            createdAt: 1585742092091,
            updatedAt: 1585748665000,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '3ac74850-ffa9-45e6-84fb-207032c8e02e',
            node_id: 116,
            nodeName: 'closed',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1585751996371,
            updatedAt: 1585751996371,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '148bdf87-d479-4ed3-ab88-8448fde98227',
            node_id: 115,
            nodeName: 'colored titles',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1585768704793,
            updatedAt: 1585768704793,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '51a77e05-cf61-431f-a2e0-2c9d289e3429',
            node_id: 33,
            nodeName: 'bold green title with warning icon',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1579211146642,
            updatedAt: 1585768707161,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '8bbcfa4a-bb3a-4308-a13a-bc39461ae7f8',
            node_id: 32,
            nodeName: 'bold purple title with warning icon',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1579211050108,
            updatedAt: 1585768709016,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '1482f0ff-519e-42ce-befc-aed05632de15',
            node_id: 95,
            nodeName: 'indentation',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1584527166856,
            updatedAt: 1585834246948,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '642eac7b-5675-4a1a-ab05-0eddd5936e1b',
            node_id: 120,
            nodeName: 'images',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\nhello world\n\n',
            createdAt: 1585834818317,
            updatedAt: 1585835382975,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'c743e596-96f0-443d-a1da-966d462283bf',
            node_id: 119,
            nodeName: 'text',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\nsome text\n',
            createdAt: 1585834805776,
            updatedAt: 1585835392411,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '40c88963-9edb-4245-b13a-900985d1f183',
            node_id: 121,
            nodeName: 'multi',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'left\nmiddle\nright\nhello\n',
            createdAt: 1585835409669,
            updatedAt: 1585835410178,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'b66d4e91-8060-4b3d-b6b9-7128c01f2d44',
            node_id: 114,
            nodeName: 'IDless anchor',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'Introduction\n',
            createdAt: 1585750261665,
            updatedAt: 1585838019982,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'e0ee242f-3e06-4da8-b801-0b0d09aacdfa',
            node_id: 123,
            nodeName: 'line height',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'bold  red text with blue  bg\nbold  red  text with blue  bg\nb old  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text with blue  bg\nbold  red text  with blue  bg  simple text\n\nbold  red  _link_  with blue  bg\n\nsimple text  bold  red text with blue  bg\n\n',
            createdAt: 1586175088007,
            updatedAt: 1586177429416,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'c2d47bd4-ec52-4165-a1af-493e246b6157',
            node_id: 125,
            nodeName: 'header',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '\n\n  Cherrytree User Manual\n  Cherrytree User Manual\n          version 0.38.9,  October, 2019\n\n\n\t\nregular h1\n',
            createdAt: 0,
            updatedAt: 1586179994237,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '54844f8d-b1db-4ae0-aa51-52ac149fb7cb',
            node_id: 113,
            nodeName: 'richtext adjacent to code is raw',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'some  hello world text\n',
            createdAt: 1585748665021,
            updatedAt: 1586180286457,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '3d3e80d8-93b0-4a4f-b2b9-f9038957b90a',
            node_id: 124,
            nodeName: 'rich text height not equal to object',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'some  hello world te x t\n\n',
            createdAt: 1586180268148,
            updatedAt: 1586180369909,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '9946027b-f12a-49ab-bb6c-04cfdefba668',
            node_id: 127,
            nodeName: 'long text and images',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '\nCherrytree is a free   and open source , hierarchical,  note-taking   application . It can store   text,  images , files, links, tables,    and executable snippets of code . \nCherrytree is a free    and open source, hierarchical,  note-taking    application. It can store   text,  images , files, links, tables,    and executable snippets of code . \nCherrytree is a free    and open source, hierarchical,  note-taking    application. It can store   text,  images , files, links, tables,    and executable snippets of code . \n\n\n',
            createdAt: 1586243598609,
            updatedAt: 1586245649406,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ba3162a3-d34e-4c54-b992-77bca95b052e',
            node_id: 23,
            nodeName: 'old',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1578872313053,
            updatedAt: 1586245720252,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '5bffd655-d862-4071-bac2-080bcf84e8fa',
            node_id: 38,
            nodeName: 'justification',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'dz red right text  dza\nred right text dza\ngreen center  bj\npurple fill\nblue left\n \n\n\n\nhello\nhello x\n',
            createdAt: 1580253842519,
            updatedAt: 1586247181203,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '44b8817c-dfd9-4700-b7ac-f5b9eac2182e',
            node_id: 118,
            nodeName: 'paragraph',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean finibus vitae arcu et cursus. Integer id felis gravida, finibus enim a, congue nulla. Praesent vitae gravida dui. In pellentesque hendrerit orci, nec placerat tortor lobortis pretium.   Maecenas porta, dolor vel aliquam consectetur, massa nisl sodales massa, id dignissim odio risus ullamcorper est. Aliquam risus dui, dapibus quis scelerisque ac, gravida nec eros. Pellentesque ac ante massa. Ut a est tortor. Nullam sollicitudin convallis magna sit amet rutrum. Aliquam viverra metus a posuere viverra. Praesent at risus rutrum, laoreet nisl eu, tempor arcu. Vivamus ut congue turpis. Donec a orci quam. Donec non molestie mi. Praesent et commodo nunc, porta commodo urna. Donec nec felis erat.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean finibus vitae arcu et cursus. Integer id felis gravida, finibus enim a, congue nulla. Praesent vitae gravida dui. In pellentesque hendrerit orci, nec placerat tortor lobortis pretium.   Maecenas porta, dolor vel aliquam consectetur, massa nisl sodales massa, id dignissim odio risus ullamcorper est. Aliquam risus dui, dapibus quis scelerisque ac, gravida nec eros. Pellentesque ac ante massa. Ut a est tortor. Nullam sollicitudin convallis magna sit amet rutrum. Aliquam viverra metus a posuere viverra. Praesent at risus rutrum, laoreet nisl eu, tempor arcu. Vivamus ut congue turpis. Donec a orci quam. Donec non molestie mi. Praesent et commodo nunc, porta commodo urna. Donec nec felis erat.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean finibus vitae arcu et cursus. Integer id felis gravida, finibus enim a, congue nulla. Praesent vitae gravida dui. In pellentesque hendrerit orci, nec placerat tortor lobortis pretium.   Maecenas porta, dolor vel aliquam consectetur, massa nisl sodales massa, id dignissim odio risus ullamcorper est. Aliquam risus dui, dapibus quis scelerisque ac, gravida nec eros. Pellentesque ac ante massa. Ut a est tortor. Nullam sollicitudin convallis magna sit amet rutrum. Aliquam viverra metus a posuere viverra. Praesent at risus rutrum, laoreet nisl eu, tempor arcu. Vivamus ut congue turpis. Donec a orci quam. Donec non molestie mi. Praesent et commodo nunc, porta commodo urna. Donec nec felis erat.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean finibus vitae arcu et cursus. Integer id felis gravida, finibus enim a, congue nulla. Praesent vitae gravida dui. In pellentesque hendrerit orci, nec placerat tortor lobortis pretium.   Maecenas porta, dolor vel aliquam consectetur, massa nisl sodales massa, id dignissim odio risus ullamcorper est. Aliquam risus dui, dapibus quis scelerisque ac, gravida nec eros. Pellentesque ac ante massa. Ut a est tortor. Nullam sollicitudin convallis magna sit amet rutrum. Aliquam viverra metus a posuere viverra. Praesent at risus rutrum, laoreet nisl eu, tempor arcu. Vivamus ut congue turpis. Donec a orci quam. Donec non molestie mi. Praesent et commodo nunc, porta commodo urna. Donec nec felis erat.\n',
            createdAt: 1586247181232,
            updatedAt: 1586247428953,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'a010af6a-da49-4e5d-815a-b09d9b1cc1ed',
            node_id: 130,
            nodeName: 'red',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1586250403019,
            updatedAt: 1586251904693,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'a47bc243-c9ee-4a8f-bbe8-1be2b61fa5e7',
            node_id: 126,
            nodeName: 'node title color',
            documentName: 'file',
            headline: null,
            ahtml_txt: '\n',
            createdAt: 1586182111647,
            updatedAt: 1586252195667,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '333f036e-bc31-4c8f-ab0a-507c395f51b0',
            node_id: 117,
            nodeName: 'image with node link',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'blue text      pink test\n',
            createdAt: 1585837900891,
            updatedAt: 1586254018220,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'f81140f2-38eb-4930-b94d-0813ce5db4e2',
            node_id: 9,
            nodeName: 'links',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'Wanchor:   node 1.1.1\nimage node:  \nnode2:  node2\nhttp url:  wikipedia  \nimage web:  \nfolder url:  temp folder\nfile url:  txt file\n',
            createdAt: 1576795094804,
            updatedAt: 1586260217026,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '046519ec-50e1-4e05-97e9-096437bdc418',
            node_id: 7,
            nodeName: 'node x',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'red text   bold italic blue text with pink bg   sourlign2  mono pink text\nthis is h1 green stroke through text\nthis is the  second  line, size h2, in pink\nthis is h3\nthis is sup this is s ub this is zero\n\n\nthis is the 8th line. the previous two lines was empty\nthis is  the 9th line. the previous line was empty\n\ncode normal bold small\ncode norma l bold small\ndzad zt\n',
            createdAt: 1575927262865,
            updatedAt: 1588518386429,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'c7059ae7-385a-4323-8755-6182b2166f51',
            node_id: 134,
            nodeName: 'flipping bold',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '      { error  &&  < p > error </ p >}\n      { data  &&\n         richText . map ((inlineNodes ,  i)  =>  (\n          < div  key = {i}>\n            {inlineNodes . length  ?  (\n              inlineNodes . map ((node ,  i)  =>  (\n',
            createdAt: 1588597823290,
            updatedAt: 1588597838968,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '4a28bf82-4f4b-4830-bfc2-2110aa635a79',
            node_id: 18,
            nodeName: 'complex code',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              "\nimport  rtModule  from  '::sass-modules/rich-text.scss' ;\nimport *  as  React  from  'react' ;\nimport  {  Fragment ,  useEffect  }  from  'react' ;\nimport   {  Link  as  CtLink  }  from  './link' ;\nimport   {  useQuery  }  from  '@apollo/react-hooks' ;\nimport  {  QUERY_CT_NODE_CONTENT  }  from  '::graphql/queries' ;\nimport  {  Png  }  from  './png' ;\nimport  {  SpinnerCircle  }  from  '::shared-components/spinner-circle' ;\nimport  {  Code  }  from  './code' ;\nimport  {  Table  }  from  './table' ;\nimport  {  Tab  }  from  '::shared-components/tab' ;\n\ntype  Props  =  {\n   node_id :  number ;\n   has_txt :  boolean ;\n   file_id :  string ;\n} ;\nconst  RichText :  React . FC < Props > =  ({ node_id ,  has_txt ,  file_id })  =>  {\n   const  {  loading ,  error ,  data  }  =  useQuery ( QUERY_CT_NODE_CONTENT . rich_txt ,  {\n     variables :  { file_id ,  node_id }\n  }) ;\n   // let pngCounter = 0;\n   let  richText :  any [] ;\n   // let pngMeta: {\n  //   height: number;\n  //   width: number;\n  //   offset: number;\n  //   node_id: number;\n  //   anchor: string;\n  //   thumbnail: string;\n  // }[];\n   if  ( data ) {\n     richText  =  JSON . parse ( data . ct_node_content [0] . rich_txt ) ;\n     // pngMeta = data.ct_nodes[0].png_meta;\n    // console.log('png', pngMeta);\n   }\n   // if (!has_txt) return <></>;\n  // console.log({ pngMeta });\n   console . log ( '********' ,  richText ) ;\n   return  (\n    < div  className = { rtModule . richText }>\n      { loading  &&  < SpinnerCircle  />}\n      { error  &&  < p > error </ p >}\n      { data  &&\n         richText . map ((inlineNodes ,  i)  =>  (\n          < div  key = {i}>\n            {inlineNodes . length  ?  (\n              inlineNodes . map ((node ,  i)  =>  (\n                < Fragment  key = {i}>\n                  { typeof  node  ===  'object'  ?  (\n                     // !node._ && node.$$ && pngMeta && pngMeta[pngCounter] ? (\n                     node . type  ?  (\n                      node . type  ===  'tab'  ?  (\n                         // pngMeta[pngCounter].anchor ? (\n                        < Tab />\n                      )  :  node . type  ===  'anchor'  ?  (\n                         // pngMeta[pngCounter].anchor ? (\n                         < i\n                           className = { rtModule . richText__anchor }\n                           id = {node . other_attributes . id }\n                        >\n                           ⚓ {node . $$ . id }\n                        </ i >\n                      )  :  node . type  ===  'png'  ?  (\n                        < Png\n                           key = {i}\n                           node_id = {node_id}\n                           offset = {node . other_attributes . offset }\n                           height = {node . $$ . height }\n                           width = {node . $$ . width }\n                           // thumbnail={pngMeta[pngCounter++].thumbnail}\n                           file_id = {file_id}\n                        />\n                      )  :  node . type  ===  'code'  ?  (\n                        < Code\n                           styles = {node . $$ }\n                           other_attributes = {node . other_attributes }\n                           text = {node . _ }\n                        />\n                      )  :  node . type  ===  'table'  ?  (\n                        < Table\n                           styles = {node . $$ }\n                           other_attributes = {node . other_attributes }\n                           table = {node . table }\n                        />\n                      )  :  (\n                         <></>\n                       )\n                    )  :  (\n                      < div  style = {{  ... node . $$ ,  display :  'inline'  }}>\n                        {node . $$ . tags . reduce (\n                           // @ts-ignore\n                           (acc ,  val)  =>  {\n                             if  ( typeof  val  !==  'string' )\n                               console . log ( 'val' ,  val) ;\n                             return typeof  val  ===  'string'  ?  (\n                               React . createElement ( ` $ { val } ` ,  null ,  acc)\n                            )  :  (\n                              < CtLink\n                                 target = {val[1] . target }\n                                 href = {val[1] . href }\n                                 text = {node . _ }\n                              />\n                            ) ;\n                           } ,\n                           node . _\n                         )}\n                      </ div >\n                    )\n                  )  :  (\n                    node\n                  )}\n                </ Fragment >\n              ))\n            )  :  (\n              < br  />\n            )}\n          </ div >\n        ))}\n    </ div >\n  ) ;\n} ;\n\nexport  {  RichText  } ;\n\n",
            createdAt: 1578617016489,
            updatedAt: 1588597897776,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'ed8a55ab-31a8-4a66-a653-65e866563522',
            node_id: 135,
            nodeName: 'html characters',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '\n      {}\n      {< p > error </ p >}\n      { data  &&\nexport  {  RichText  } ;\n\n',
            createdAt: 1588597897802,
            updatedAt: 1588600214351,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'd1ab4d5c-ba6c-4389-9f3b-84acb79c2890',
            node_id: 136,
            nodeName: 'node z',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'tesla cyber truck:\n\n:D\n\n\ngoogle link:  https://google.com  \n',
            createdAt: 1588713622392,
            updatedAt: 1588713624492,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '15a89a42-369d-449b-b4a7-30e55a81746a',
            node_id: 137,
            nodeName: 'node z',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'tesla cyber truck:\n\n:D\n\n\ngoogle link:  https://google.com  \n',
            createdAt: 1588713626332,
            updatedAt: 1588713628069,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: 'be383bab-be89-4055-966b-7632fe90c5e7',
            node_id: 138,
            nodeName: 'node z',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'tesla cyber truck:\n\n:D\n\n\ngoogle link:  https://google.com  \n',
            createdAt: 1588713628095,
            updatedAt: 1588713630142,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '15d7f127-0f61-433d-8c7b-39b4d638a749',
            node_id: 139,
            nodeName: 'node z',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'tesla cyber truck:\n\n:D\n\n\ngoogle link:  https://google.com  \n',
            createdAt: 1588713630169,
            updatedAt: 1588713630172,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '851d5673-6d10-4eb1-aeff-85ba3170a30b',
            node_id: 10,
            nodeName: 'images',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'tesla cyber truck:\n\n:D\n\n\ngoogle link:  https://google.com  \n',
            createdAt: 1576533050196,
            updatedAt: 1588713641867,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '40ad579d-4d33-4b22-806f-76e8772b988f',
            node_id: 2,
            nodeName: 'node 2',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              '\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n',
            createdAt: 1568911857231,
            updatedAt: 1589122750862,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '08ae16bb-47fb-4a1f-ab66-a1ec36b6fa81',
            node_id: 37,
            nodeName: 'new line',
            documentName: 'file',
            headline: null,
            ahtml_txt: 'hello world\n',
            createdAt: 1580083674209,
            updatedAt: 1594246131080,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'RVP_MsNYqZ',
            nodeId: '09190ce7-0b07-499d-966c-7725904ebe80',
            node_id: 6,
            nodeName: 'node 1.1.1',
            documentName: 'file',
            headline: null,
            ahtml_txt:
              'hi :)  bold   itali c   un derlined  up sub  mon osppaca  zero  red   bgblue\nh1\nh2\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nawesome anchor \n',
            createdAt: 1569059366567,
            updatedAt: 1594493676688,
            __typename: 'NodeSearchResultEntity',
          },
          {
            documentId: 'DFpSv7DAnX',
            nodeId: 'a53b645f-fc08-4fcc-a1bc-f3824b4542c7',
            node_id: 2,
            nodeName: 'hp',
            documentName: 'liste de laptops',
            headline: null,
            ahtml_txt: "hp pavillion 15\ntoday i'm driving a bike\n",
            createdAt: 1594493690509,
            updatedAt: 1594493844014,
            __typename: 'NodeSearchResultEntity',
          },
        ],
        __typename: 'NodeSearchResults',
      },
      __typename: 'SearchResultEntity',
    },
  },
};

export { searchResultsData };
